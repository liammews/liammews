---
import { VisualEditing } from "@sanity/astro/visual-editing";
import "../styles/index.css";
import Nav from "../components/Nav/index.astro";
import Button from "../components/Button/index.astro";
import { Icon } from "astro-icon/components";

export interface Props {
  title?: string;
  description?: string;
  image?: string;
  url?: string;
  type?: string;
  navVisible?: boolean;
  backLink?: string | null;
  ariaLabel?: string | null;
  backButtonText?: string | null;
}

// Declare global window.plausible for TypeScript to prevent errors in the inline script
declare global {
  interface Window {
    plausible: {
      (...args: any[]): void;
      q?: any[];
      o?: any;
      init?: (i: any) => void;
    };
  }
}

const {
  title = "Liam Mews",
  description = "Designer, developer, Webflow Project Lead @ MakeBuild.",
  image = "/favicon.svg", 
  url = Astro.url.href,
  type = "website",
  navVisible = true,
  backLink = null, // Added missing comma
  ariaLabel = null,
  backButtonText = null,
} = Astro.props;

const visualEditingEnabled =
  import.meta.env.PUBLIC_SANITY_VISUAL_EDITING_ENABLED == "true";
---
<!doctype html>
<html lang="en">
  <head>
    <!-- Privacy-friendly analytics by Plausible -->
    <script async src="https://plausible.io/js/pa-jpfgnMUuOUjofkJgMj5R6.js"></script>
    <script>
      window.plausible=window.plausible||function(){(window.plausible.q=window.plausible.q||[]).push(arguments)},window.plausible.init=window.plausible.init||function(i){window.plausible.o=i||{}};
      window.plausible.init()
    </script>

    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    
    <!-- Primary Meta Tags -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content={type} />
    <meta property="og:url" content={url} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={image} />
    
    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={url} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={image} />
    
    <!-- Additional SEO -->
    <meta name="robots" content="index, follow" />
    <meta name="author" content="Liam Mews" />
    <link rel="canonical" href={url} />
  </head>
  <body>
    {navVisible && (
    <Nav navVisible={navVisible}>
        <slot name="nav" />
      </Nav>
    )}

    {backLink && (
      <div class="layout_back-button">
        <a class="back-button" aria-label={ariaLabel} href={backLink}>
          <Icon name="arrow-u-up-left" />
          {backButtonText}
        </a>
      </div>
    )}

    <main>
      <slot />
    </main>
    <VisualEditing enabled={visualEditingEnabled} />
  </body>
</html>

<style>
  .layout_back-button {
    padding: 2rem var(--margin) 2rem var(--margin);
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
  }

  .back-button {
    background: var(--surface-foreground-idle);
    border-radius: 99rem;
    padding: 0.75rem 1.25rem;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.35rem;
    text-decoration: none;
    color: var(--text-color-primary);
    font-size: var(--font-size-small);
    font-weight: var(--font-weight-bold);
    
    @media (hover: hover) and (pointer: fine) {
        &:hover {
            background: var(--surface-foreground-hover);
        }
    }

    &:active {
        background: var(--surface-foreground-active);
    }

    &:focus-visible {
        outline: 2px solid var(--focus-color);
        outline-offset: 2px;
    }
  }
</style>