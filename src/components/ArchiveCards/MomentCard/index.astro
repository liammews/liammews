---
import "./moment-card.css"

interface Props {
    title: string;
    image: string;
    link: string;
}

const { title, image } = Astro.props;
const lightboxId = `lightbox-${Math.random().toString(36).substr(2, 9)}`;
---

<button class="moment-card intro-in" data-lightbox-trigger data-lightbox-id={lightboxId} aria-label="View moment">
    <div class="moment-card_content">
        <img src={image} alt={title} loading="lazy" class="moment-card_image" />
    </div>
</button>

<!-- Lightbox Modal -->
<div class="lightbox" id={lightboxId} role="dialog" aria-modal="true" aria-hidden="true">
    <div class="lightbox_scrim" data-lightbox-close data-lightbox-id={lightboxId}></div>
    <div class="lightbox_content">
        <img src={image} alt={title} loading="lazy" class="lightbox_image" />
        <div class="lightbox_content_text">
            <p>{title}.webp</p>
            <p class="text-color-muted text-size-xsmall"> Click to close</p>
        </div>

    </div>
</div>

<script define:vars={{ lightboxId }}>
    function setupLightbox() {
        const trigger = document.querySelector(`[data-lightbox-id="${lightboxId}"]`);
        const lightbox = document.getElementById(lightboxId);
        const closeButton = document.querySelector(`[data-lightbox-close][data-lightbox-id="${lightboxId}"]`);
        
        if (!trigger || !lightbox || !closeButton) return;
        
        // Open lightbox
        trigger.addEventListener('click', () => {
            lightbox.setAttribute('aria-hidden', 'false');
            document.body.style.overflow = 'hidden';
            
            // Add scrollbar compensation on desktop only
            const isMobile = window.matchMedia('(max-width: 768px)').matches;
            if (!isMobile) {
                document.documentElement.style.borderRight = '15px solid transparent';
            }
        });
        
        // Close lightbox
        const closeLightbox = () => {
            lightbox.setAttribute('aria-hidden', 'true');
            document.body.style.overflow = '';
            document.documentElement.style.borderRight = '';
        };
        
        closeButton.addEventListener('click', closeLightbox);
        
        // Close on escape key
        document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape' && lightbox.getAttribute('aria-hidden') === 'false') {
                closeLightbox();
            }
        });
    }
    
    setupLightbox();
</script>
